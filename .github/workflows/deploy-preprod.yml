name: Deploy til preprod
on: [workflow_dispatch]
env:
    DOCKER_IMAGE: ghcr.io/${{ github.repository }}
jobs:
    lint:
        uses: ./.github/workflows/lint.yml
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}
    test:
        uses: ./.github/workflows/test.yml
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}
    test-cypress:
        uses: ./.github/workflows/cypress-tester.yml
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}
    build:
        uses: ./.github/workflows/build.yml
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}
    deploy-dev:
        name: Deploye til DEV
        runs-on: ubuntu-latest
        permissions:
            packages: write
        needs: [lint, test, test-cypress, build]
        steps:
            - name: Hente kode
              uses: actions/checkout@v3
            - name: Setup .yarnrc.yml
              run: |
                  yarn config set npmScopes.navikt.npmRegistryServer "https://npm.pkg.github.com"
                  yarn config set npmScopes.navikt.npmAlwaysAuth true
                  yarn config set npmScopes.navikt.npmAuthToken $NPM_AUTH_TOKEN
              env:
                  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
            - name: Sette opp Node
              uses: actions/setup-node@v3
              with:
                  node-version: 18.x
                  registry-url: https://npm.pkg.github.com/
                  scope: '@navikt'

            - uses: actions/download-artifact@v3
              with:
                  name: dist
                  path: ./dist

            - name: Installere moduler
              run: yarn install --immutable
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

            - name: Build and publish docker image
              uses: nais/docker-build-push@v0
              id: docker-push
              with:
                team: k9saksbehandling
                push_image: true
                pull: true
                dockerfile: Dockerfile
                docker_context: .
                build_args: OIDC_AUTH_PROXY=https://k9-punsj-oidc-auth-proxy.dev.intern.nav.no
                image_suffix: latest
                project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
                identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}

            - name: Deploye til dev
              uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-fss
                  RESOURCE: nais/frontend/k9-punsj-frontend.yml
                  VARS: nais/frontend/dev.json
                  IMAGE: ${{ steps.docker-push.outputs.image }}
