name: Deploy til preprod
on: [workflow_dispatch]
env:
    DOCKER_IMAGE: ghcr.io/${{ github.repository }}
jobs:
    lint:
        uses: ./.github/workflows/lint.yml
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}
    test:
        uses: ./.github/workflows/test.yml
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}
    test-cypress:
        uses: ./.github/workflows/cypress-tester.yml
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}
    build:
        uses: ./.github/workflows/build.yml
        secrets:
            READER_TOKEN: ${{ secrets.READER_TOKEN }}
    deploy-dev:
        name: Deploye til DEV
        runs-on: ubuntu-latest
        permissions:
            packages: write
        needs: [lint, test, test-cypress, build]
        steps:
            - name: Hente kode
              uses: actions/checkout@v4
            - name: Setup .yarnrc.yml
              run: |
                  yarn config set npmScopes.navikt.npmRegistryServer "https://npm.pkg.github.com"
                  yarn config set npmScopes.navikt.npmAlwaysAuth true
                  yarn config set npmScopes.navikt.npmAuthToken $NPM_AUTH_TOKEN
              env:
                  NPM_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
            - name: Sette opp Node
              uses: actions/setup-node@v4
              with:
                  node-version: 18.x
                  registry-url: https://npm.pkg.github.com/
                  scope: '@navikt'

            - uses: actions/download-artifact@v4
              with:
                  name: dist
                  path: ./dist

            - name: Installere moduler
              run: yarn install --immutable
              env:
                  NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

            - uses: docker/login-action@v3.0.0
              with:
                  registry: ghcr.io
                  username: ${{ github.REPOSITORY_OWNER }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Sett tag for docker image
              run: echo "TAG=$(date "+%Y.%m.%d")-$(git rev-parse --short HEAD)" >> $GITHUB_ENV

            - name: Bygge & laste opp Docker image
              run: |
                  docker build --pull --tag ${DOCKER_IMAGE}:${TAG} --tag ${DOCKER_IMAGE}:latest .
                  docker push ${DOCKER_IMAGE} --all-tags

            - name: Sett image for nais deploy
              run: echo "IMAGE=${DOCKER_IMAGE}:${TAG}" >> $GITHUB_ENV

            - name: Deploye til dev
              uses: nais/deploy/actions/deploy@v1
              env:
                  APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
                  CLUSTER: dev-fss
                  RESOURCE: nais/frontend/k9-punsj-frontend.yml
                  VARS: nais/frontend/dev.json
